
@{
    Layout = "~/Views/Shared/_LayoutBlank.cshtml";
}
<!-- Page content -->
<div class="page-content">

    <!-- Main content -->
    <div class="content-wrapper">

        <!-- Inner content -->
        <div class="content-inner">

            <!-- Content area -->
            <div class="content d-flex justify-content-center align-items-center">

                <!-- Login card -->
                <form class="login-form  needs-validation" novalidate v-on:submit.prevent="onSubmit" id="_login001">

                    <div class="card mb-0">
                        <div class="card-body">
                            <div class="text-center mb-3">
                                <div class="d-inline-flex align-items-center justify-content-center mb-4 mt-2">
                                    <img src="~/assets/images/logo_icon.png" class="h-48px" alt="">
                                </div>
                                <h3 class="mb-0"><b>ĐĂNG NHẬP</b></h3>
                                <span class="d-block text-muted">Vui lòng nhập thông tin xác thực của bạn bên dưới </span>
                            </div>
                            <span class="text-danger  ">{{ errorMessage }}</span>
                            <p>@Html.ValidationSummary()  </p> 

                            <div class="mb-3">
                                <label class="form-label">Tên đăng nhập</label>
                                <div class="form-control-feedback form-control-feedback-start">
                                    <input type="text" v-model:value="row.username" class="form-control" placeholder="username@gmail.com" required>
                                    <div class="invalid-feedback" v-if="errors.username">{{ errors.username }}</div>
                                    <div class="form-control-feedback-icon">
                                        <i class="ph-user-circle text-muted"></i>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Mật khẩu</label>
                                <div class="form-control-feedback form-control-feedback-start">
                                    <input type="password" v-model:value="row.password" class="form-control" placeholder="•••••••••••" required>
                                    <div class="invalid-feedback" v-if="errors.password">{{ errors.password }}</div>
                                    <div class="form-control-feedback-icon">
                                        <i class="ph-lock text-muted"></i>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex align-items-center mb-3">
                                <label class="form-check">
                                    <input type="checkbox" name="remember" v-model:value="row.rememberMe" checked class="form-check-input">
                                    <span class="form-check-label">Nhớ tài khoản</span>
                                </label>


                            </div>
                            <div class="d-flex align-items-center mb-3">
                                <a href="~/ForgotPassword" class="ms-auto">Quên mật khẩu</a>
                                <a href="~/ResendEmailConfirmation" class="ms-auto">Gửi lại email xác thực tài khoản</a>
                            </div>
                            <div class="mb-3">
                                <button type="submit" class="btn btn-primary w-100">Đăng nhập</button>
                            </div>
                            <!--
                            <div class="text-center text-muted content-divider mb-3">
                                <span class="px-2">Bạn chưa có tài khoản?</span>
                            </div>


                            <div class="mb-3">
                                <a href="~/Login/Login_registration_advanced" class="btn btn-light w-100">Đăng ký</a>
                            </div>

                            <span class="form-text text-center text-muted">Bằng cách tiếp tục, bạn xác nhận rằng bạn đã đọc <a href="#">Điều khoản & Điều kiện</a> và <a href="#">Chính sách cookie của chúng tôi</a></span>

                            -->
                        </div>
                    </div>
                </form>
                <!-- /login card -->

            </div>
            <!-- /content area -->

        </div>
        <!-- /inner content -->

    </div>
    <!-- /main content -->

</div>
<!-- /page content -->
<script>




    new Vue({
        el: "#_login001",
        data: {
            errorMessage: '',
            errors: { username: '', password: '', },
            row: { userName: '', password: '', returnUrl: '', rememberMe: true },
        },
        mounted() {
            this.row.username = '@Context.Request.Cookies["UserName"]';
            this.row.password = '@Context.Request.Cookies["Password"]';
            this.row = { ... this.row };
        },
        methods: {
            validateForm() {
                this.errors = {}; // Reset errors
                if (!this.row.username)
                    this.errors.username = 'Tên đăng nhập yêu cầu nhập.';

                if (!this.row.password)
                    this.errors.password = 'Mật khẩu yêu cầu nhập';
            },
            onSubmit() {
                this.errorMessage = '';
                this.validateForm();
                if (Object.keys(this.errors).length > 0)
                    return;

                this.row.returnUrl = $('#ReturnUrl').val();
                this.row = { ... this.row };

                axios.post('/login', this.row).then(response => {
                    console.log("response", response);
                    if (response.status == 200) {
                        window.location.href = response.request.responseURL;
                    } else {
                    }

                }).catch(error => {
                    this.errorMessage = error.response.data.message;
                });
            }
        }
    })
</script>
