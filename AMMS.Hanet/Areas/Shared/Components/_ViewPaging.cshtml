<ul class="pagination pagination-spaced">
    @if (Model.HasPreviousPage)
    {
        <li class="paginate_button page-item previous" id="DataTables_Table_0_previous">
            <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = Model.CurrentPage-1, pageSize = Model.PageSize })" data-dt-idx="0" class="page-link rounded">←</a>
        </li>
    }
    else
    {
        <li class="paginate_button page-item disabled" id="DataTables_Table_0_previous">
            <a href="#" data-dt-idx="0" class="page-link rounded">←</a>
        </li>
    }


    @if (Model.TotalPages > 5)
    {
        if (Model.CurrentPage < 5)
        {
            for (int i = 1; i <= 5; i++)
            {
                string ac = "";
                if (i == Model.CurrentPage)
                    ac = "active";
                <li class="paginate_button page-item @ac">
                    <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = i, pageSize = Model.PageSize })" data-dt-idx="@i" class="page-link rounded">@i</a>
                </li>
            }
            <li class="paginate_button page-item disabled" id="DataTables_Table_0_previous">
                <a href="#" data-dt-idx="0" class="page-link rounded">...</a>
            </li>

            <li class="paginate_button page-item ">
                <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = Model.TotalPages, pageSize = Model.PageSize })" data-dt-idx="@Model.TotalPages" class="page-link rounded">@Model.TotalPages</a>
            </li>
        }
        else if (Model.CurrentPage > Model.TotalPages - 4)
        {
            <li class="paginate_button page-item ">
                <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = 1, pageSize = Model.PageSize })" data-dt-idx="1" class="page-link rounded">1</a>
            </li>
            <li class="paginate_button page-item disabled" id="DataTables_Table_0_previous">
                <a href="#" data-dt-idx="0" class="page-link rounded">...</a>
            </li>

            for (int i = Model.TotalPages - 4; i <= Model.TotalPages; i++)
            {
                string ac = "";
                if (i == Model.CurrentPage)
                    ac = "active";
                <li class="paginate_button page-item @ac">
                    <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = i, pageSize = Model.PageSize })" data-dt-idx="@i" class="page-link rounded">@i</a>
                </li>
            }

        }
        else
        {
            <li class="paginate_button page-item ">
                <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = 1, pageSize = Model.PageSize })" data-dt-idx="1" class="page-link rounded">1</a>
            </li>
            <li class="paginate_button page-item disabled" id="DataTables_Table_0_previous">
                <a href="#" data-dt-idx="0" class="page-link rounded">...</a>
            </li>


            <li class="paginate_button page-item ">
                <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = Model.CurrentPage-1, pageSize = Model.PageSize })" data-dt-idx="@(Model.CurrentPage - 1)" class="page-link rounded">@(Model.CurrentPage - 1)</a>
            </li>
            <li class="paginate_button page-item active">
                <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = Model.CurrentPage, pageSize = Model.PageSize })" data-dt-idx="@Model.CurrentPage" class="page-link rounded">@Model.CurrentPage</a>
            </li>

            if (Model.CurrentPage < Model.TotalPages - 1)
            {
                <li class="paginate_button page-item ">
                    <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = Model.CurrentPage+1, pageSize = Model.PageSize })" data-dt-idx="@(Model.CurrentPage + 1)" class="page-link rounded">@(Model.CurrentPage + 1)</a>
                </li>
                <li class="paginate_button page-item disabled" id="DataTables_Table_0_previous">
                    <a href="#" data-dt-idx="0" class="page-link rounded">...</a>
                </li>

            }
            if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="paginate_button page-item ">
                    <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = Model.TotalPages, pageSize = Model.PageSize })" data-dt-idx="@Model.TotalPages" class="page-link rounded">@Model.TotalPages</a>
                </li>
            }

        }
    }
    else
    {
        for (int i = 1; i <= Model.TotalPages; i++)
        {
            string ac = "";
            if (i == Model.CurrentPage)
                ac = "active";
            <li class="paginate_button page-item @ac">
                <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = i, pageSize = Model.PageSize })" data-dt-idx="@i" class="page-link rounded">@i</a>
            </li>
        }
    }



    @if (Model.HasNextPage)
    {
        <li class="paginate_button page-item next" id="DataTables_Table_0_next">
            <a href="@Url.Action("Index",  new { order = Model.OrderBy, sort = Model.Sort, page = Model.CurrentPage+1, pageSize = Model.PageSize })" data-dt-idx="3" class="page-link rounded">→</a>
        </li>
    }
    else
    {
        <li class="paginate_button page-item disabled" id="DataTables_Table_0_next">
            <a href="#" data-dt-idx="3" class="page-link rounded">→</a>
        </li>
    }
</ul>
