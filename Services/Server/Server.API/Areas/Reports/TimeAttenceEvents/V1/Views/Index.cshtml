@{
    ViewData["Title"] = "Lịch sử điểm danh";
    Layout = "~/Views/Shared/_LayoutManage.cshtml";
}


<!-- Main content -->
<div class="content-wrapper" id="webui">
    <!-- Inner content -->
    <div class="content-inner">

        <!-- Page header -->
        <div class="page-header page-header-light shadow">
            <div class="page-header-content d-lg-flex">
                <div class="d-flex">
                    <h4 class="page-title mb-0" style="padding: 10px 8px !important; ">
                        <span class="fw-normal">@ViewData["Title"]</span>
                    </h4>
                    <a href="#page_header" class="btn btn-light align-self-center collapsed d-lg-none border-transparent rounded-pill p-0 ms-auto" data-bs-toggle="collapse">
                        <i class="ph-caret-down collapsible-indicator ph-sm m-1"></i>
                    </a>
                </div>
            </div>
        </div>
        <!-- /page header -->
        <!-- Content area -->
        <div class="content">
            <div class="card">
                <div class="card-body">
                    <div class="row mb-3  ">
                        <div class="col-md-2">
                            <label class="form-label">Từ ngày</label>
                            <datetime type="date"
                                      v-model="filter.startDate"
                                      class="form-control p-0" input-class="w-100 py-12 px-2 border-0"
                                      placeholder="Vui lòng chọn thời gian...">
                            </datetime>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Đến ngày</label>
                            <datetime type="date"
                                      v-model="filter.endDate"
                                      class="form-control p-0" input-class="w-100 py-12 px-2 border-0"
                                      placeholder="Vui lòng chọn thời gian...">
                            </datetime>
                        </div>

                        <div class="col-md-1">
                        </div>

                        <div class="col-md-2 ">
                            <label class="form-label">Tổng số học sinh điểm danh</label>
                            <input type="text" class="form-control  mb-3 fw-bold " readonly v-model:value="totalAmount">
                        </div>
                        <div class="col-md-2 ">
                            <label class="form-label" title="Số học sinh điểm danh được quét đồng bộ">Tổng số học sinh đã đồng bộ</label>
                            <input type="text" class="form-control  mb-3 fw-bold " readonly v-model:value="totalFace">
                        </div>
                        <div class="col-md-2 ">
                            <label class="form-label" title="Số học sinh điểm danh chờ quét đồng bộ">Tổng số học sinh chưa đồng bộ</label>
                            <input type="text" class="form-control mb-3 fw-bold " readonly v-model:value="totalCurrent">
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="text-start">
                            <button type="button" v-on:click=onLoadData(true) class="btn btn-primary" style="margin-right: 5px;">Tìm kiếm</button>
                            <button type="button" v-on:click=onExport() class="btn btn-primary" style="margin-right: 5px;">Xuất báo cáo</button>
                        </div>
                    </div>

                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <div id="table" class="table-responsive">
                        <table class="table table-bordered table-striped  table-hover">
                            <thead class="">
                                <tr>
                                    <th>Stt</th>
                                    <th> Mã học sinh </th>
                                    <th> Họ tên </th>
                                    <th> Buổi điểm danh</th>
                                    <th> Trạng thái </th>
                                    <th> Sự kiện </th>
                                    <th> Thời gian diểm danh  </th>
                                    <th> Lớp </th>
                                    <th> Trường </th>
                                    <th> Thiết bị </th>
                                    <th> Năm sinh </th>
                                </tr>
                                <tr>
                                    <th>
                                        <button type="button" class="btn btn-primary" v-on:click="onLoadData(true)"> <i class="fa fa-search"></i> </button>
                                    </th>
                                    <th>
                                        <input type="text" class="form-control" v-model="params.studentCode">
                                    </th>
                                    <th>
                                        <input type="text" class="form-control " v-model="params.studentName">
                                    </th>
                                    <th style=" white-space: nowrap;">
                                        <select class="form-select" v-model="params.attendenceSection">
                                            <option value="">Tất cả</option>
                                            <option value="0">Sáng</option>
                                            <option value="1">Chiều</option>
                                            <option value="2">Tối</option>
                                        </select>
                                    </th>
                                    <th>
                                        <select class="form-select" v-model="params.eventType">
                                            <option selected value="">Tất cả</option>
                                            <option value="True">Đã đồng bộ</option>
                                            <option value="None">Đang chờ</option>
                                        </select>
                                    </th>
                                    <th>
                                        <select class="form-select" v-model="params.valueAbSent">
                                            <option selected value="">Tất cả</option>
                                            <option value="C">C - Có mặt</option>
                                            <option value="X">X- Đi muộn</option>
                                        </select>
                                    </th>
                                    <th>
                                        <input type="text" class="form-control " disabled>
                                    </th>
                                    <th>
                                        <input type="text" class="form-control " v-model="params.className">
                                    </th>
                                    <th style=" white-space: nowrap;">
                                        <input type="text" class="form-control " v-model="params.organizationName">
                                    </th>
                                    <th>
                                        <input type="text" class="form-control " v-model="params.deviceId">
                                    </th>

                                    <th>
                                        <input type="datetime" class="form-control " disabled readonly id="createdDate">
                                    </th>

                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="(item, index) in data">
                                    <td><span>{{index  +1 }}</span></td>
                                    <td style=" white-space: nowrap;"><span>{{item.studentCode}}</span></td>
                                    <td style=" white-space: nowrap;"><span>{{item.studentName}}</span></td>
                                    <td style=" white-space: nowrap;">
                                        <span v-if="item.attendenceSection ==0" class='badge bg-success  bg-opacity-10 text-success '>Sáng</span>
                                        <span v-else-if="item.attendenceSection ==1" class='badge bg-primary bg-opacity-10 text-primary'>Chiều</span>
                                        <span v-else class='badge bg-warning bg-opacity-10 text-warning'>Tối</span>
                                    </td>
                                    <td style=" white-space: nowrap;">
                                        <span v-if="item.eventType ==true" class='badge bg-primary bg-opacity-10 text-primary'>Đã đồng bộ</span>
                                        <span style="cursor:pointer" v-else class='badge bg-warning bg-opacity-10 text-warning'>Đang chờ</span>
                                    </td>
                                    <td style=" white-space: nowrap;">
                                        <span>{{ item.valueAbSent}}</span>
                                    </td>
                                    <td style=" white-space: nowrap;">
                                        <span>{{ formatDateTime(item.eventTime) }}</span>
                                    </td>
                                    <td><span>{{item.className}}</span></td>
                                    <td><span style="white-space:nowrap">{{item.organizationName}}</span></td>
                                    @* <td><span>{{item.deviceName}}</span></td> *@
                                    <td><span>{{item.deviceId}}</span></td>

                                    <td style=" white-space: nowrap;">
                                        <span>{{ formatDate(item.dateOfBirth) }}</span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div class="phan-trang " style="width: 100%;">
                        <div class="fixed-table-pagination">
                            <div class="row">
                                <div style="float:left" class="col-md-8">
                                    <div style=" margin-top: 10px !important;font-size;13px " class=" pagination-detail">
                                        <ul id="pagingNumbers" class="pagination" style="margin: 0px !important;">  </ul>
                                    </div>
                                </div>

                                <div style="float: right;text-align: right;" class="col-md-4 ">
                                    <div style=" margin-top: 10px !important; " class=" pagination-detail">
                                        <span class="pagination-info">
                                            Hiển thị {{firstRow}} đến {{totalDataRowNext}} trong số {{totalRow}} hàng
                                        </span>
                                        <span class="page-list">
                                            <select v-model:value="filter.RowsPerPage" id="RowsPerPage" class=" " v-on:change="renderRowOnPage()">
                                                <option value="10">10</option>
                                                <option selected value="25">25</option>
                                                <option value="50">50</option>
                                                <option value="100">100</option>
                                                <option value="250">250</option>
                                            </select>
                                            hàng trên trang
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-1">
                        <div class="col-md-12" style=" justify-content: center;"> 
                            <ul style="list-style-type: none; padding-left: 5px; font-size:13px">
                                <li class="list-color"> <b class="text-danger"> Lưu ý:</b> </li>
                                <li class="list-color"> <b> Buổi điểm danh:</b> </li>
                                <li class="list-color"><span class="block-color bg-success"> 0 </span> Sáng  </li>
                                <li class="list-color"><span class="block-color bg-primary">1 </span> Chiều </li>
                                <li class="list-color"><span class="block-color bg-warning ">2 </span> Tối </li>
                                <li class="list-color">  - </li>
                                <li class="list-color"><b>  Sự kiện </b>  </li>
                                <li class="list-color"><span class= "">C </span> Có mặt </li>
                                <li class="list-color"><span class="">2 </span> Đi muộn </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="XemChiTiet">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Hình ảnh </h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row img-platenumber">
                        <div class="col-sm-12">
                            <div style=" padding: 5px;  box-shadow:unset !important ;border:  unset !important" class="panel">
                                <label style="padding:5px 0 0 5px;color:forestgreen" class="control-label recent-history ">Hình ảnh</label>
                                <table style=" border: 1px solid #ddd !important;min-height: 250px; " class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Lượt xe </th>
                                            <th>Hình trước </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td style=" vertical-align: inherit !important;">  </td>
                                            <td><a class="anh_report" id="anh_chup_truoc_lan1" data-fancybox="gallery" href="" target="_blank"> <img style="width:150px; height: 130px !important  " src=" " alt=" " /> </a></td>
                                        </tr>
                                        <tr>
                                            <td style=" vertical-align: middle;" colspan="1">Biển số  </td>
                                            <td style="height:60px !important"><a class="anh_report" id="bien_so_xe_sau_lan1" target="_blank" data-fancybox="gallery" href=""> <img style="height: 35px;  object-fit: contain;" src=" " alt=" " /> </a></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div style=" padding: 5px 15px;" class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>


    @await Html.PartialAsync("/Views/Shared/Components/_FooterPartial.cshtml")
</div>
<style>
    .list-color {
        margin-bottom: 4px;
        margin-right: 11px;
        float: left;
    }
</style>
<script>
    $(document).ready(function () {
        // $('#classId').on("change", function () {
        //     _bcX.filter.classId = $(this).val() ?? null;
        //     _bcX.combobox.data = [];
        //     _bcX.onLoadData();
        // });


        $("ul.pagination").on("click", "li", function () {
            var pageNumber = $(this).find("a").data('number');
            if (pageNumber != undefined) {
                _bcX.filter.CurentPage = pageNumber;
                _bcX.onLoadData();
            }

        });
    });

    var _bcX = new Vue({
        el: '#webui',
        components: {
            'BootstrapTable': BootstrapTable
        },
        data: {
            filter: {
                classId: null,
                schoolYearId: null,

                startDate: formatDateTime(new Date()),
                endDate: formatDateTime(new Date()),

                RowsPerPage: 50,
                CurentPage: 1,
                Actived: "1",
                FilterItems: [],
            },

            params: {
                studentCode: null,
                studentName: null,
                deviceId: null,
                eventType: "",
                valueAbSent: "",
                dateOfBirth: null,
                className: null,
                organizationName: null,
                attendenceSection: "",
            },
            data: [],
            totalAmount: 0,
            totalFace: 0,
            totalCurrent: 0,
            name_file: "LICHSUDIEMDANH_" + new Date().getDate() + "_" + new Date().getTime(),
            object: {
                dateNow: formatDateTime(new Date()),
                config: {
                    headers: { Authorization: `Bearer @Model`, 'Content-Type': 'application/json' }
                }
            },
            combobox: { schools: [], schoolYears: [], classes: [] },
            // phân trang
            firstRow: 0,
            totalRow: 0,
            totalDataRowNext: 0,
            curentPage: 0,
            rowsPerPage: 50,
        },
        methods: {

            onLoadData(resetPage) {
                this.onLoadDataDetail(resetPage);
                this.onLoadData_General();
            },

            onLoadDataDetail(resetPage) {
                $('.loader').show();
                this.checkParams();
                if (resetPage)
                    this.filter.CurentPage = 1;
                axios.post('/api/v1/TimeAttenceEvent/Post', this.filter, this.object.config).then(response => {
                    if (response.request.responseURL.includes('~/Account/Login')) {
                        window.location = window.location.href;
                    }
                    $('.loader').delay(100).hide(0);
                    this.data = response.data.data.items;

                    this.totalRow = parseInt(response.data.data.totalRow);
                    this.firstRow = parseInt((parseInt(this.filter.CurentPage) - 1) * parseInt(this.filter.RowsPerPage) + 1);
                    this.totalPage = parseInt(response.data.data.totalPage);

                    this.totalDataRowNext = parseInt(parseInt(this.firstRow) + parseInt(response.data.data.totalDataRow) - 1);

                    const pagingNumbers = $('#pagingNumbers');
                    this.renderPagination(pagingNumbers, this.totalPage, this.filter.CurentPage);
                }).catch(error => {
                    $('.loader').delay(100).hide(0);
                    console.log(error);
                });
            },

            onLoadData_General() {
                this.checkParams();
                axios.post('/api/v1/TimeAttenceEvent/PostGeneral', this.filter, this.object.config).then(response => {
                    if (response.request.responseURL.includes('~/Account/Login')) {
                        window.location = window.location.href;
                    }

                    this.totalAmount = response.data.data.totalAmount;
                    this.totalFace = response.data.data.totalFace;
                    this.totalCurrent = response.data.data.totalCurrent;

                }).catch(error => {
                    $('.loader').delay(100).hide(0);
                    console.log(error);
                });
            },



            checkParams() {
                this.filter.FilterItems = [];
                Object.entries(this.params).forEach(([key, value]) => {
                    if (value !== null) {
                        this.filter.FilterItems.push({
                            propertyName: key,
                            comparison: 0,
                            value: value
                        });
                    }
                });
            },
            renderPagination(pagingNumbers, totalPage, currentPage) {
                pagingNumbers.empty(); // Clear previous content

                if (currentPage > 6) {
                    pagingNumbers.append(`<li class="page-item page-pre"><a class="page-link" data-number="1"> <i class="fa fa-step-backward" ></i> </a></li>`);
                }

                // Hiển thị nút quay về đầu trang
                if (currentPage > 1) {
                    pagingNumbers.append(`<li class="page-item page-pre"><a class="page-link" data-number="${currentPage - 1}"> <i class="fa fa-caret-left" ></i> </a></li>`);
                    pagingNumbers.append(`<li class="page-item page-pre"><a class="page-link" data-number="1">1</a></li>`);
                }

                // Nếu trang hiện tại  >3 và tổng trang hơn 6 trang sẽ hiển thị ....
                if (currentPage > 3 && totalPage > 6) {
                    pagingNumbers.append('<li class="page-item disabled"><a class="page-link">...</a></li>');
                }

                //Hiển thị các trang sau trang hiện tại (tối đa 3 trang sau)
                const endPage = Math.min(currentPage + 3, totalPage);
                for (let i = currentPage; i <= endPage; i++) {
                    pagingNumbers.append(`<li class="page-item ${currentPage == i ? 'active' : ''}"><a class="page-link" data-number="${i}"> ${i}</a></li>`);
                }

                // Chỉ hiển thị ba số trang cuối cùng nếu tổng số trang nhiều hơn 3
                if (totalPage > 6 && currentPage + 3 < totalPage) {
                    pagingNumbers.append('<li class="page-item disabled"><a class="page-link">...</a></li>');

                    const startLast = Math.max(totalPage - 2, currentPage + 1);
                    for (let i = startLast; i <= totalPage; i++) {
                        pagingNumbers.append(`<li class="page-item ${currentPage == i ? 'active' : ''}"><a class="page-link" data-number="${i}">${i}</a></li>`);
                    }
                }

                // trang next cuối
                if (currentPage < totalPage) {
                    pagingNumbers.append(`<li class="page-item page-next"><a class="page-link" data-number="${currentPage + 1}"> <i class="fa fa-caret-right" ></i> </a></li>`);
                    pagingNumbers.append(`<li class="page-item page-next"><a class="page-link" data-number="${totalPage}"><i class="fa fa-step-forward" ></i></a></li>`);
                }
            },
            renderRowOnPage() {
                this.filter.CurentPage = 1;
                this.onLoadDataDetail();
            },
            formatDateTime(date) {
                let data = date != null ? moment(date).format('DD/MM/YYYY HH:mm:ss') : null;
                return data;
            },
            formatDate(value) {
                if (value != null) {
                    var dt = new Date(value);
                    var mth = dt.getMonth() + 1;
                    var day = dt.getDate();
                    if (mth < 10)
                        mth = "0" + mth;
                    if (day < 10)
                        day = "0" + day;

                    return day + '/' + mth + '/' + dt.getFullYear();
                } else
                    return null;
            },
            onExport() {
                $('.loader').show();
                axios.post('/api/v1/TimeAttenceEvent/export', this.filter, this.object.config).then(response => {
                    if (response.request.responseURL.includes('Auth/Login'))
                        window.location = window.location.href;

                    $('.loader').delay(100).hide(0);
                    window.location.href = '/' + response.data;
                }).catch(error => {
                    $('.loader').delay(100).hide(0);
                    console.log(error);
                });
            },

            popupViewDetail(row) {
                this.value = row;
                bootstrap.Modal.getOrCreateInstance(document.getElementById('XemChiTiet')).show();
            },

            onLoadCombobox() {
                axios.post('/api/v1/StudentSmas/PostSchool', null, this.object.config).then(response => {
                    if (response.request.responseURL.includes('~/Account/Login')) {
                        window.location = window.location.href;
                    }
                    if (response.data.succeeded) {
                        this.combobox.schools = {
                            ...response.data.data.schools
                        };
                    }
                    else {
                        alertify.notify(response.data.message, 'error', 6, function () { });
                    }
                    $('.loader').delay(100).hide(0);
                }).catch(error => {
                    $('.loader').delay(100).hide(0);
                })
            },

        },
        mounted() {
            // this.onLoadCombobox();
            this.onLoadData();
        },
    })
</script>

