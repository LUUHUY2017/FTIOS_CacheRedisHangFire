@{
    ViewData["Title"] = "Lịch sử đồng bộ thiết bị";
    Layout = "~/Views/Shared/_LayoutManage.cshtml";
}

<!-- Main content -->
<div class="content-wrapper" id="webui">

    <!-- Inner content -->
    <div class="content-inner">

        <!-- Page header -->
        <div class="page-header page-header-light shadow">
            <div style="padding: 3px 18px !important; " class="page-header-content d-lg-flex">
                <div class="d-flex">
                    <h4 class="page-title mb-0" style="padding: 10px 8px !important; ">
                        <span class="fw-normal">@ViewData["Title"]</span>
                    </h4>
                </div>
                <div class="d-lg-block my-lg-auto ms-lg-auto" id="page_header">
                    <div class="d-sm-flex align-items-center mb-3 mb-lg-0 ms-lg-3">
                        <div class="d-inline-flex mt-3 mt-sm-0">
                            <div class="pull-right">
                                @* <a v-on:click="onPopupModelEdit(null)" class="btn btn-primary " style="margin-right: 5px;"> Đồng bộ học sinh</a> *@
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <!-- /page header -->
        <!-- Content area -->
        <div class="content">
            <div class="card">
                <div class="card-body">

                    <div class="row mb-3  ">
                        <div class="col-md-2">
                            <label class="form-label">Từ ngày</label>
                            <datetime type="date"
                                      v-model="filter.StartDate"
                                      class="form-control p-0" input-class="w-100 py-12 px-2 border-0"
                                      placeholder="Vui lòng chọn thời gian...">
                            </datetime>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Đến ngày</label>
                            <datetime type="date"
                                      v-model="filter.EndDate"
                                      class="form-control p-0" input-class="w-100 py-12 px-2 border-0"
                                      placeholder="Vui lòng chọn thời gian...">
                            </datetime>
                        </div>

                        <div class="col-md-2 ">
                            <label class="form-label">Thiết bị</label>
                            <select class="form-select select" id="FDevice">
                                <option selected value="">Tất cả </option>
                                <option v-for="option in combobox.devices" v-bind:value="option.id">
                                    {{ option.deviceName }} - {{option.serialNumber}}
                                </option>
                            </select>
                        </div>


                        @*   <div class="col-md-2">
                        <select class="form-select select" required data-placeholder="Vui lòng chọn trường" id="FOrganization">
                        <option selected value="">Tất cả </option>
                        <option v-for="option in combobox.organizations" v-bind:value="option.id">
                        {{ option.organizationName }}
                        </option>
                        </select>
                        </div> *@


                        <div class="col-md-2 d-flex align-items-end">
                            <button type="button" v-on:click=onLoadData(true) class="btn btn-primary" style="margin-right: 5px;">Tìm kiếm</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">

                    <div id="table" class="table-responsive">
                        <table class="table table-bordered table-striped  table-hover">
                            <thead class="">
                                <tr>
                                    <th>Stt</th>
                                    <th> Thao tác </th>
                                    <th> Mã học sinh </th>
                                    <th> Họ tên </th>
                                    <th> Thiết bị </th>
                                    <th> Thao tác </th>
                                    <th> Trạng thái </th>
                                    <th> Trạng thái khuôn mặt </th>
                                    <th> Thông báo </th>
                                    <th> Nội dung </th>
                                    <th> Thời gian cập nhật  </th>
                                </tr>
                                <tr>
                                    <th>
                                        <button type="button" class="btn btn-primary" v-on:click="onLoadData(true)"> <i class="fa fa-search"></i> </button>
                                    </th>
                                    <th> </th>
                                    <th>
                                        <input type="text" class="form-control" v-model="params.studentCode">
                                    </th>
                                    <th>
                                        <input type="text" class="form-control " v-model="params.studentName">
                                    </th>
                                    <th>
                                        <input type="text" class="form-control " v-model="params.deviceName">
                                    </th>
                                    <th>
                                        <input type="text" class="form-control " v-model="params.synAction">
                                    </th>
                                    <th>
                                        <select class="form-select" v-model="params.synStatus">
                                            <option selected value="">Tất cả</option>
                                            <option value="True">Thành công</option>
                                            <option value="False">Lỗi</option>
                                            <option value="None">Đang chờ</option>
                                        </select>
                                    </th>
                                    <th>
                                    </th>
                                   
                                    <th>
                                        <input type="text" class="form-control " v-model="params.synMessage">
                                    </th>
                                    <th>
                                        <input type="text" class="form-control " v-model="params.synFaceMessage">
                                    </th>
                                    <th>
                                        <input type="datetime" class="form-control " disabled readonly id="createdDate">
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="(item, index) in data">
                                    <td><span>{{index  +1 }}</span></td>
                                    <td><a v-on:click="onSubmitSync(item)" class="btn btn-sm btn-info edit" title="Đồng bộ lại "> <i class="fa fa-refresh"> </i> </a></td>
                                    <td style=" white-space: nowrap;"><span>{{item.studentCode}}</span></td>
                                    <td style=" white-space: nowrap;"><span>{{item.studentName}}</span></td>
                                    <td style=" white-space: nowrap;"><span>{{item.deviceName}}</span></td>
                                    <td style=" white-space: nowrap;"><span>{{item.synAction}}</span></td>
                                    <td style=" white-space: nowrap;">
                                        <span v-if="item.synStatus ==true" class='badge bg-primary bg-opacity-10 text-primary'>Thành công</span>
                                        <span v-else-if="item.synStatus ==false" class='badge bg-danger bg-opacity-10 text-danger'>Không thành công</span>
                                        <span v-else class='badge bg-warning bg-opacity-10 text-warning'>Đang chờ</span>
                                    </td>
                                    
                                    <td style=" white-space: nowrap;">
                                        <input v-if="item.synFaceStatus ==true" type='checkbox' class='checked' checked />
                                        <input v-else-if="item.synFaceStatus== false" type='checkbox' class='checked' />
                                        <input v-else="item.synFaceStatus== false" type='checkbox' readonly disabled />
                                    </td>
                                    <td><span>{{item.synMessage}}</span></td>
                                    <td><span>{{item.synFaceMessage}}</span></td>
                                    <td style=" white-space: nowrap;">
                                        <span>{{ formatDateTime(item.lastModifiedDate) }}</span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div class="phan-trang " style="width: 100%;">
                        <div class="fixed-table-pagination">
                            <div class="row">
                                <div style="float:left" class="col-md-8">
                                    <div style=" margin-top: 10px !important; overflow:hidden" class=" pagination">
                                        <ul id="pagingNumbers" class="pagination" style="margin: 0px !important;">  </ul>
                                    </div>
                                </div>

                                <div style="float: right;text-align: right;" class="col-md-4 ">
                                    <div style=" margin-top: 10px !important; " class=" pagination-detail">
                                        <span class="pagination-info">
                                            Hiển thị {{firstRow}} đến {{totalDataRowNext}} trong tổng số {{totalRow}} hàng
                                        </span>
                                        <span class="page-list">
                                            <select v-model:value="filter.RowsPerPage" id="RowsPerPage" class=" " v-on:change="renderRowOnPage()">
                                                <option value="10">10</option>
                                                <option selected value="25">25</option>
                                                <option value="50">50</option>
                                                <option value="100">100</option>
                                                <option value="250">250</option>
                                            </select>
                                            hàng trên mỗi trang
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ModelAddEdit" aria-hidden="true">
        <div id="waitDialog" class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 id="staticBackdropLabel" class="modal-title">{{object.form_tile}}</h5>
                    <button type="button" data-bs-dismiss="modal" aria-label="Close" class="btn-close"></button>
                </div>
                <form class="form-horizontal has-validation-callback" v-on:submit.prevent="onSubmitFormAddEdit" id="FormAddEdit">
                    <div class="modal-body">
                        <div class="box">
                            <div class="row">
                                <div class="row mb-4">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <div class="col-md-2">
                                        <div class="form-group mb-3">
                                            <div class="text-center" id="khung-chup">
                                                <div class="anh-chup image-div">
                                                    <a id="aoutput" data-fancybox="gallery" v-bind:href="item.imageSrc">
                                                        <img id="output" v-bind:src="item.imageSrc">
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-12 col-sm-12  ">
                                                <input type="file" id="imageInput" class="form-control">
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-5">
                                        <label class="col-md-4 control-label text-nowrap fw-bold mb-1 ">Mã học sinh   </label>
                                        <div class="col-md-10 col-sm-12  ">
                                            <input class="form-control  mb-1 " type="text" readonly required id="studentCode" name="studentCode" v-model:value="item.studentCode">
                                        </div>

                                        <div class="form-group">
                                            <label class="col-md-4 control-label text-nowrap fw-bold mb-1">Căn cước  </label>
                                            <div class="col-md-10 col-sm-12  ">
                                                <input class="form-control  mb-1 " type="text" readonly required id="identifyNumber" name="identifyNumber" v-model:value="item.identifyNumber">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-4 control-label text-nowrap fw-bold mb-1">Lớp  </label>
                                            <div class="col-md-10 col-sm-12  ">
                                                <input class="form-control  mb-1  " type="text" readonly required id="className" name="className" v-model:value="item.className">
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-md-4 control-label  text-nowrap fw-bold mb-1">Giới tính</label>
                                            <div class="col-md-10 col-sm-12  ">
                                                <label> <input type="radio" class="form-check-input" disabled required v-model:value="item.genderCode" value="01"> Nam</label>
                                                <label> <input type="radio" class="form-check-input" disabled required v-model:value="item.genderCode" value="02">Nữ </label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-5">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label  text-nowrap fw-bold mb-1">Họ và tên    </label>
                                            <div class="col-md-10 col-sm-12  ">
                                                <input type="text" id="fullName" name="fullName" readonly required class="form-control  mb-1  " v-model:value="item.fullName">
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-md-4 control-label text-nowrap fw-bold mb-1">Trạng thái </label>
                                            <div class="col-md-10 col-sm-12  ">
                                                <input type="text" id="status" name="status" readonly required class="form-control  mb-1  " v-model:value="item.status">
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-md-4 control-label  text-nowrap fw-bold mb-1">Năm sinh</label>
                                            <div class="col-md-10 col-sm-12  ">
                                                <input type="text" id="syncCode" name="syncCode" readonly required class="form-control  mb-1" v-model:value="item.dateOfBirth">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div class="text-end">
                            <button type="button" class="btn mr-5" data-bs-dismiss="modal"> Bỏ qua </button>
                            <button type="submit" class="btn btn-primary"> Lưu </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ModelImage" aria-hidden="true">
        <div id="waitDialog" class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 id="staticBackdropLabel" class="modal-title">Cắt ảnh</h5>
                    <button type="button" data-bs-dismiss="modal" aria-label="Close" class="btn-close"></button>
                </div>
                <div class="modal-body">
                    <div class="box">
                        <div class="box-body">
                            <div class="row mb-4">
                                <div class="col-md-12">
                                    <div style="width:500px; height: 450px">
                                        <img id="image" style="max-width: 100%; display: none;">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="text-end">
                                        <button id="cropBtn" type="button" class="btn btn-info noradius " style="display: none;"><i class="fa fa-check icon-white"></i> Cắt ảnh </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    connection.on("RefreshStudent", function (data) {
        var data1 = JSON.parse(data);
        _syncD.onLoadData();
    });

    $(document).ready(function () {
        $('#FDevice').on("change", function () {
            _syncD.filter.DeviceId = $(this).val() ?? null;
        });

        $("ul.pagination").on("click", "li", function () {
            var pageNumber = $(this).find("a").data('number');
            if (pageNumber != undefined) {
                _syncD.filter.CurentPage = pageNumber;
                _syncD.onLoadData();
            }
        });
    });

</script>

<script>
    var _syncD = new Vue({
        el: '#webui',
        components: {
            'BootstrapTable': BootstrapTable
        },
        data: {

            data: [],
            filter: {
                Export: 0,
                ClassId: null,
                SchoolYearId: null,
                DeviceId: null,

                RowsPerPage: 50,
                CurentPage: 1,
                Actived: "1",
                FilterItems: [],
                StartDate: formatDateTime(new Date()),
                EndDate: formatDateTime(new Date()),
            },

            params: {
                studentCode: null,
                studentName: null,
                deviceName: null,
                synAction: null,
                synStatus: "",
                synFaceStatus: null,
                synMessage: null,
                synFaceMessage: null,
            },
            object: {
                dateNow: formatDateTime(new Date()),
                form_tile: '',
                config: {
                    headers: { Authorization: `Bearer @Model`, 'Content-Type': 'application/json' }
                }
            },
            item: {},
            combobox: { devices: [] },

            // phân trang
            firstRow: 0,
            totalRow: 0,
            totalDataRowNext: 0,
            curentPage: 0,
            rowsPerPage: 50,
        },
        methods: {
            onLoadData(resetPage) {
                $('.loader').show();

                this.checkParams();
                if (resetPage)
                    this.filter.CurentPage = 1;

                axios.post('/api/v1/SyncDeviceServer/Post', this.filter, this.object.config).then(response => {
                    if (response.request.responseURL.includes('~/Account/Login')) {
                        window.location = window.location.href;
                    }

                    if (response.data.succeeded) {
                        this.data = response.data.data.items;

                        this.totalRow = parseInt(response.data.data.totalRow);
                        this.firstRow = parseInt((parseInt(this.filter.CurentPage) - 1) * parseInt(this.filter.RowsPerPage) + 1);
                        this.totalPage = parseInt(response.data.data.totalPage);

                        this.totalDataRowNext = parseInt(parseInt(this.firstRow) + parseInt(response.data.data.totalDataRow) - 1);

                        const pagingNumbers = $('#pagingNumbers');
                        this.renderPagination(pagingNumbers, this.totalPage, this.filter.CurentPage);
                    }
                    else {
                        alertify.notify(response.data.message, 'error', 6, function () { });
                    }

                    $('.loader').delay(100).hide(0);
                }).catch(error => {
                    $('.loader').delay(100).hide(0);
                });
            },

            checkParams() {
                this.filter.FilterItems = [];
                Object.entries(this.params).forEach(([key, value]) => {
                    if (value !== null) {
                        this.filter.FilterItems.push({
                            propertyName: key,
                            comparison: 0,
                            value: value
                        });
                    }
                });
            },
            renderPagination(pagingNumbers, totalPage, currentPage) {
                pagingNumbers.empty(); // Clear previous content

                if (currentPage > 6) {
                    pagingNumbers.append(`<li class="page-item page-pre"><a class="page-link" data-number="1"> <i class="fa fa-step-backward" ></i> </a></li>`);
                }

                // Hiển thị nút quay về đầu trang
                if (currentPage > 1) {
                    pagingNumbers.append(`<li class="page-item page-pre"><a class="page-link" data-number="${currentPage - 1}"> <i class="fa fa-caret-left" ></i> </a></li>`);
                    pagingNumbers.append(`<li class="page-item page-pre"><a class="page-link" data-number="1">1</a></li>`);
                }

                // Nếu trang hiện tại  >3 và tổng trang hơn 6 trang sẽ hiển thị ....
                if (currentPage > 3 && totalPage > 6) {
                    pagingNumbers.append('<li class="page-item disabled"><a class="page-link">...</a></li>');
                }

                //Hiển thị các trang sau trang hiện tại (tối đa 3 trang sau)
                const endPage = Math.min(currentPage + 3, totalPage);
                for (let i = currentPage; i <= endPage; i++) {
                    pagingNumbers.append(`<li class="page-item ${currentPage == i ? 'active' : ''}"><a class="page-link" data-number="${i}"> ${i}</a></li>`);
                }

                // Chỉ hiển thị ba số trang cuối cùng nếu tổng số trang nhiều hơn 3
                if (totalPage > 6 && currentPage + 3 < totalPage) {
                    pagingNumbers.append('<li class="page-item disabled"><a class="page-link">...</a></li>');

                    const startLast = Math.max(totalPage - 2, currentPage + 1);
                    for (let i = startLast; i <= totalPage; i++) {
                        pagingNumbers.append(`<li class="page-item ${currentPage == i ? 'active' : ''}"><a class="page-link" data-number="${i}">${i}</a></li>`);
                    }
                }

                // trang next cuối
                if (currentPage < totalPage) {
                    pagingNumbers.append(`<li class="page-item page-next"><a class="page-link" data-number="${currentPage + 1}"> <i class="fa fa-caret-right" ></i> </a></li>`);
                    pagingNumbers.append(`<li class="page-item page-next"><a class="page-link" data-number="${totalPage}"><i class="fa fa-step-forward" ></i></a></li>`);
                }
            },
            renderRowOnPage() {
                this.filter.CurentPage = 1;
                this.onLoadData();
            },
            formatDateTime(date) {
                let data = date != null ? moment(date).format('DD/MM/YYYY HH:mm:ss') : null;
                return data;
            },

            onResetForm() {
                this.item = {};
            },
            onPopupModelEdit(row) {
                this.item = row;
                this.item.dateOfBirth = moment(row.dateOfBirth).format('DD/MM/YYYY');
                this.item = { ...this.item };


                this.object.form_tile = "Thông tin học sinh";
                bootstrap.Modal.getOrCreateInstance(document.getElementById('ModelAddEdit')).show();
            },

            onSubmitFormAddEdit() {
                if (!validateForm("#FormAddEdit"))
                    return true;

                $('.loader').show();
                axios.put('/api/v1/SyncDeviceServer/Edit', this.item, this.object.config).then(response => {
                    if (response.request.responseURL.includes('~/Account/Login'))
                        window.location = window.location.href;

                    $('.loader').hide(0);
                    if (response.data.succeeded) {
                        _syncD.onLoadData();

                        bootstrap.Modal.getOrCreateInstance(document.getElementById('ModelAddEdit')).hide();
                        alertify.success(response.data.message);
                    }
                    else {
                        alertify.notify(response.data.message, 'error', 6, function () { });
                    }
                }).catch(error => {
                    $('.loader').hide(0);

                });
            },

            onSubmitSync(item) {
                $('.loader').show();
                axios.post('/api/v1/SyncDeviceServer/PostSyncItem', item, this.object.config).then(response => {
                    if (response.request.responseURL.includes('~/Account/Login'))
                        window.location = window.location.href;
                    $('.loader').hide(0);
                    if (response.data.succeeded) {
                        this.onLoadUserSyncLog();
                    }
                    else {
                        alertify.notify(response.data.message, 'error', 6, function () { });
                    }
                }).catch(error => {
                    $('.loader').hide(0);
                });
            },

            onLoadCombobox() {
                axios.get('/api/v1/device/GetByOrgId', this.object.config).then(response => {
                    if (response.request.responseURL.includes('~/Account/Login')) {
                        window.location = window.location.href;
                    }
                    if (response.data.succeeded) {
                        this.combobox.devices = {
                            ...response.data.data
                        };
                    }
                    else {
                        alertify.notify(response.data.message, 'error', 6, function () { });
                    }
                    $('.loader').delay(100).hide(0);
                }).catch(error => {
                    $('.loader').delay(100).hide(0);
                })
            },
        },
        mounted() {
            this.onLoadCombobox();
            this.onLoadData();

        },
    })
</script>

