<!--StudentAttendace-->
<div class="card shadow-sm rounded-0" id="webUI_dBSchoolClassStudent" style="min-height: 215px;">
    <div class="card-body">
        <!--Tilte-->
        <h5 class="text-start">Trường học</h5>
        <div class="row mt-2 px-2">
            <!-- Tổng số trường học -->
            <div class="d-flex justify-content-between align-items-center underline-dashed px-0">
                <span>Tổng số trường</span>
                <span class="dots"></span>
                <span class="fw-bold">{{item.totalSchool}}</span>
            </div>
            <!-- Tổng số học sinh đã đồng bộ -->
            <div class="d-flex justify-content-between align-items-center mt-2 underline-dashed px-0">
                <span>Tổng số lớp</span>
                <span class="dots"></span>
                <span class="fw-bold">{{item.totalClass}}</span>
            </div>
            <!-- Tổng số học sinh chưa đồng bộ-->
            <div class="d-flex justify-content-between align-items-center mt-2 underline-dashed px-0">
                <span>Tổng số học sinh</span>
                <span class="dots"></span>
                <span class="fw-bold">{{item.totalStudent}}</span>
            </div>
            
            <!-- Nút See More -->
           @*  <div class="col text-start mt-2">
                <a href="/V1/TimeAttenceEvent" class="text-end">Xem thêm</a>
            </div> *@
        </div>
    </div>

</div>

<script>

    var _dBSchoolClassStudent = new Vue({
        el: '#webUI_dBSchoolClassStudent',
        components: {
            'BootstrapTable': BootstrapTable
        },
        data: {
            columns: [],
            data: [],
            
            options: {
                search: true,
                pagination: true,
                showExtendedPagination: true,
                sortable: true,
                searchAlign: 'right',
                paginationHAlign: 'left',
                paginationDetailHAlign: 'right',
                pageSize: 25,
                pageList: [10, 25, 50, 100, 200],
            },

            filter: {
                columnTable: "",
                actived: "1",
                key: "",
                organizationId: "0",
                export: "0",
                dateTimeFilter: formatDateTime(new Date()),
                startDate: formatDateTime(new Date()),
                endDate: formatDateTime(new Date()),
            },

            object: {
                dateNow: formatDateTime(new Date()),
                form_tile: '',
                editAction: false,
                infoAction: false,
                bearerAuthorization: {
                    headers: { Authorization: `Bearer @Model`, 'Content-Type': 'application/json' }
                }
            },

            data_Total: {},
            item: {},
            combobox: { organizations: [], },
        },
        methods: {
            loadData() {
                $('.loader').show();
                if (this.getCookie("organizationId")) {
                    this.filter.organizationId = this.getCookie("organizationId");
                }
                axios.post('/api/v1/DashBoard/GetTotalSchool', this.filter, this.object.bearerAuthorization).then(response => {
                    if (response.request.responseURL.includes('~/Account/Login')) {
                        window.location = window.location.href;
                    }
                    $('.loader').delay(100).hide(0);

                    if (response.data.succeeded) {
                        this.item = response.data.data;
                    }
                    else {
                        alertify.notify(response.data.message, 'error', 6, function () { });
                    }


                }).catch(error => {
                    $('.loader').delay(100).hide(0);
                });
            },
            getCookie(name) {
                const value = "; " + document.cookie;
                const parts = value.split("; " + name + "=");
                if (parts.length === 2) return parts.pop().split(";").shift();
            },
        },
        mounted() {
            this.loadData();
        },
    })
</script>
