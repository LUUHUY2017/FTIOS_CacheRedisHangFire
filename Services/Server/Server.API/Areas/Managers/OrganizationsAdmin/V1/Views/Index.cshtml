@{
    ViewData["Title"] = "Trường học";
    Layout = "~/Views/Shared/_LayoutManage.cshtml";
}

<!-- Main content -->
<div class="content-wrapper" id="webui">

    <!-- Inner content -->
    <div class="content-inner">

        <!-- Page header -->
        <div class="page-header page-header-light shadow">
            <div style="padding: 3px 18px !important; " class="page-header-content d-lg-flex">
                <div class="d-flex">
                    <h4 class="page-title mb-0" style="padding: 10px 8px !important; ">
                        <span class="fw-normal">@ViewData["Title"]</span>
                    </h4>
                </div>

                @* <div class="d-lg-block my-lg-auto ms-lg-auto" id="page_header">
                    <div class="d-sm-flex align-items-center mb-3 mb-lg-0 ms-lg-3">
                        <div class="d-inline-flex mt-3 mt-sm-0">
                            <div class="pull-right">
                                <a v-on:click="onPopupModelEdit(null, false)" class="btn btn-primary " style="margin-right: 5px;"> Thêm mới</a>
                            </div>
                        </div>
                    </div>
                </div> *@
            </div>

        </div>
        <!-- /page header -->
        <!-- Content area -->

        <div class="content">

            <div class="card">
                <div class="card-body">
                    <form v-on:submit.prevent="loadData">
                        <div class="row mb-3">
                            <div class="col-lg-2">
                                <label class="form-label">Tìm kiếm theo</label>
                                <select class="form-select" v-model:value="filter.columnTable">
                                    <option value="OrganizationCode">Mã trường</option>
                                    <option value="OrganizationName">Tên trường</option>
                                </select>
                            </div>
                            <div class="col-lg-2">
                                <label class="form-label">Trạng thái</label>
                                <select class="form-select" v-model:value="filter.actived">
                                    <option value="1">Hoạt động</option>
                                    <option value="0">Ngừng hoạt động</option>
                                </select>
                            </div>
                            <div class="col-lg-3">
                                <label class="form-label">Từ khóa tìm kiếm</label>
                                <input type="text" id="key" name="key" placeholder="Nhập từ khóa tìm kiếm" class="form-control" v-model="filter.key">
                            </div>
                            <div class="col-lg-2 d-flex align-items-end">
                                <button type="submit" class="btn btn-primary" style="margin-right: 5px;">Tìm kiếm</button>
                            </div>

                        </div>
                    </form>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <bootstrap-table :columns="columns" :data="data" :options="options"></bootstrap-table>
                </div>
            </div>

        </div>
    </div>

    @await Html.PartialAsync("/Views/Shared/Components/_FooterPartial.cshtml")
</div>

<script>
    var _org = new Vue({
        el: '#webui',
        components: {
            'BootstrapTable': BootstrapTable
        },
        data: {
            columns: [
                {
                    title: "STT",
                    field: "index",
                    formatter: (value, row, index) => {
                        return ++index;
                    }
                },
                {
                    title: 'Mã trường',
                    sortable: true,
                    field: 'organizationCode'
                },
                {
                    title: 'Tên trường',
                    sortable: true,
                    field: 'organizationName'
                },
                // {
                //     title: 'Địa chỉ',
                //     sortable: true,
                //     field: 'organizationAddress'
                // },
                // {
                //     title: 'Mã tỉnh',
                //     sortable: true,
                //     field: 'provinceCode'
                // },
                // {
                //     title: 'Tỉnh',
                //     sortable: true,
                //     field: 'provinceName'
                // },
                {
                    title: 'Mô tả ',
                    sortable: true,
                    field: 'organizationDescription'
                },
                {
                    title: "Thời gian cập nhật",
                    field: 'lastModifiedDate',
                    sortable: true,
                    formatter: (value, row, index) => {
                        if (row.lastModifiedDate) {
                            var lastModifiedDate = moment(row.lastModifiedDate).format('DD/MM/YYYY HH:mm:ss');
                            return "<span class ='black'> " + lastModifiedDate + "  </span>";
                        }
                    },
                },
            ],
            data: [],
            options: {
                search: true,
                pagination: true,
                showExtendedPagination: true,
                sortable: true,
                searchAlign: 'right',
                paginationHAlign: 'left',
                paginationDetailHAlign: 'right',
                pageSize: 25,
                pageList: [10, 25, 50, 100, 200],
            },
            filter: {
                columnTable: "OrganizationName",
                actived: "1",
                onlineStatus: "",
                organizationId: -1,
                key: "",
                export: "0",
            },
            object: {
                dateNow: formatDateTime(new Date()),
                form_tile: '',
                form_name: 'trường',
                editAction: false,
                infoAction: false,
                config: {
                    headers: { Authorization: `Bearer @Model`, 'Content-Type': 'application/json' }
                }
            },
            item: { actived: true, },
        },
        methods: {
            loadData() {
                $('.loader').show();
                axios.post('/api/v1/Organization/Post', this.filter, this.object.config).then(response => {
                    if (response.request.responseURL.includes('~/Account/Login')) {
                        window.location = window.location.href;
                    }

                    if (response.data.succeeded) {
                        this.data = response.data.data;
                    }
                    else {
                        alertify.notify(response.data.message, 'error', 6, function () { });
                    }

                    $('.loader').delay(100).hide(0);
                }).catch(error => {
                    $('.loader').delay(100).hide(0);
                });
            },

            loadNavSchool() {
                axios.get('/api/v1/Organization/Gets', this.object.config).then(response => {
                    if (response.request.responseURL.includes('Auth/Login')) {
                        window.location = window.location.href;
                    }
                    if (response.data.succeeded) {
                        localStorage.setItem('schools', JSON.stringify(response.data.data));
                        _navbarHeader.comboboxNav.schoolNavs = response.data.data;
                    }
                }).catch(error => {
                    console.warn(error);
                });
                
            },
        },
        mounted() {
            this.loadData();
        },
    })
</script>

