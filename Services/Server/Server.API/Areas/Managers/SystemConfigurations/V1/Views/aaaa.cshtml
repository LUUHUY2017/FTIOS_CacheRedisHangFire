@{
    ViewData["Title"] = "Cấu hình";
}

<div class="content-wrapper" id="webui_attendenceConfig">
    <!-- Inner content -->
    <div class="content-inner">

        <!-- Page header -->
        <div class="page-header page-header-light shadow">
            <div style="padding: 3px 18px !important; " class="page-header-content d-lg-flex">
                <div class="d-flex">
                    <h4 class="page-title mb-0" style="padding: 10px 8px !important; ">
                        <span class="fw-normal">@ViewData["Title"]</span>
                    </h4>
                </div>

                @* <div class="d-lg-block my-lg-auto ms-lg-auto" id="page_header">
                <div class="d-sm-flex align-items-center mb-3 mb-lg-0 ms-lg-3">
                <div class="d-inline-flex mt-3 mt-sm-0">
                <div class="pull-right">
                <a v-on:click="exportFile()" class="btn btn-primary " style="margin-right: 5px;"> Xuất file</a>
                </div>
                </div>
                </div>
                </div> *@
            </div>

        </div>
        <!-- /page header -->
        <!-- Content area -->

        <div class="content">

            <div class="card">
                <div class="card-body">
                    @* <form v-on:submit.prevent="loadData" id="FormFilter">
                        <div class="row mb-3">
                            <div class="col-lg-3 mb-2">
                                <label class="form-label">Tổ chức</label>
                                <select data-dropdown-parent="#webui_attendenceConfig" required data-placeholder="Vui lòng chọn tổ chức" id="FOrganization" class="form-control select">
                                    <option :value="0" hidden disabled selected v-if="filter.organizationId == 0">Vui lòng chọn tổ chức</option>
                                    <option v-for="option in combobox.organizations" v-bind:value="option.id">
                                        {{ option.organizationName }}
                                    </option>
                                </select>
                                <div class="invalid-feedback">Vui lòng chọn tổ chức </div>
                                <div class="valid-feedback"> </div>
                            </div>
                            <div class="col-lg-3 mb-2">
                                <label class="form-label">Địa điểm</label>
                                <select data-dropdown-parent="#webui_attendenceConfig" class="form-control select" required data-placeholder="Vui lòng chọn địa điểm" id="FSite">
                                    <option :value="0">Tất cả</option>
                                    <option v-for="option in combobox.sites" v-bind:value="option.id">
                                        {{ option.siteName }}
                                    </option>
                                </select>
                                <div class="invalid-feedback">Vui lòng chọn tổ chức </div>
                                <div class="valid-feedback"> </div>
                            </div>
                            <div class="col-lg-3 mb-2">
                                <label class="form-label">Năm</label>
                                <select class="form-select" required v-model:value="filter.year" id="FYear">
                                    <option v-for="option in combobox.years" v-bind:value="option">
                                        {{ option }}
                                    </option>
                                </select>
                            </div>
                            <div class="col-lg-3 mb-2">
                                <label class="form-label">Trạng thái</label>
                                <select class="form-select" v-model:value="filter.actived">
                                    <option value="-1">Tất cả</option>
                                    <option value="1">Hoạt động</option>
                                    <option value="0">Ngừng hoạt động</option>
                                </select>
                            </div>
                            <div class="col-lg-2 mb-2">
                                <label class="form-label">Thời gian bắt đầu</label>
                                <select class="form-select" required v-model:value="filter.startTime" id="FStartTime">
                                    <option v-for="option in combobox.startTimes" v-bind:value="option.id">
                                        {{ option.displayTime }}
                                    </option>
                                </select>
                            </div>
                            <div class="col-lg-2 mb-2">
                                <label class="form-label">Thời gian kết thúc</label>
                                <select class="form-select" required v-model:value="filter.endTime" id="FEndTime">
                                    <option v-for="option in combobox.endTimes" v-bind:value="option.id">
                                        {{ option.displayTime }}
                                    </option>
                                </select>
                            </div>
                            <div class="col-lg-2 d-flex align-items-end mb-2">
                                <button type="submit" class="btn btn-primary" style="margin-right: 5px;">Tìm kiếm</button>
                            </div>

                        </div>
                    </form> *@
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <bootstrap-table :columns="columns_1" :data="data_1" :options="options_1"></bootstrap-table>
                </div>
            </div>

        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        
    });

    var _config = new Vue({
        el: '#webui_attendenceConfig',
        components: {
            'BootstrapTable': BootstrapTable
        },
        data: {
            columns_1: [
                // {
                //     field: 'Action',
                //     title: 'Action',
                //     align: 'center',
                //     formatter: (value, row, index) => {
                //         var ele = `<div style="white-space: nowrap;">`;
                //         ele += `<a href = "javascript:" class= "btn btn-sm btn-info updateCache" title = "Cập nhật Cache " > <i class="fa fa-repeat" > </i> </a > &nbsp;`;
                //         ele += `<a href = "javascript:" class= "btn btn-sm btn-warning edit"  title = "Update " > <i class="fa fa-pencil" > </i><span class="sr-only">Update</span > </a > &nbsp;`;
                //         ele += `<a href="javascript:" class="btn btn-danger btn-sm delete-asset delete" title="Delete "> <i class="fa fa-trash" ></i> <span class="sr-only">Inactive</span></a>&nbsp;`;
                //         ele += ` </div>`;
                //         return ele;
                //     },
                //     // events: {
                //     //     'click .edit': function (e, value, row) {
                //     //         _device.onPopupModelEdit(row, true);
                //     //     },
                //     //     'click .delete': function (e, value, row) {
                //     //         var question = "Bạn có chắc chắn muốn xóa dòng này khỏi cơ sở dữ liệu không? sau khi xóa không khôi phục lại được!";
                //     //         var content = "Nhập nội dung xóa (không quá 250 kí tự)";
                //     //         alertify.prompt(question, content, ''
                //     //             , function (evt, value) {
                //     //                 axios.post('/api/v1/device/Delete', { id: row.id + '', reason: value }, _device.object.bearerAuthorization).then(response => {
                //     //                     if (response.data.succeeded) {
                //     //                         alertify.success(response.data.message);
                //     //                         _device.loadData();
                //     //                     }
                //     //                     else {
                //     //                         alertify.warning(response.data.message);
                //     //                     }
                //     //                 }).catch(error => {
                //     //                     alert("Lỗi: " + error.response.data.message);
                //     //                 });
                //     //             }, function () {
                //     //                 //alertify.error('Cancel')
                //     //             });
                //     //     },
                //     //     'click .updateCache': function (e, value, row) {
                //     //         var title = "Cập nhật dữ liệu Cache";
                //     //         var question = "Bạn có chắc chắn muốn cập nhật lại dữ liệu dòng này không?";

                //     //         alertify.confirm(title, question, function (evt, value) {
                //     //             axios.post('/api/v1/device/UpdateRowInCache', row, _device.object.bearerAuthorization).then(response => {
                //     //                 if (response.data.succeeded) {
                //     //                     alertify.success(response.data.message);
                //     //                     _device.loadData();
                //     //                 }
                //     //                 else {
                //     //                     alertify.warning(response.data.message);
                //     //                 }
                //     //             }).catch(error => {
                //     //                 alert("Lỗi: " + error.response.data.message);
                //     //             });
                //     //         }, '');
                //     //     },
                //     // }
                // },
                {
                    title: "SchoolName",
                    field: 'organizationName',
                    sortable: true,
                },
                {
                    title: "EndpointIdentity",
                    field: 'endpointIdentity',
                    sortable: true,
                },
                {
                    title: 'AccountName',
                    field: 'accountName',
                    sortable: true,
                },
                {
                    title: "Password",
                    field: "password",
                    sortable: true,
                },
                {
                    title: "GrantType",
                    field: "grantType",
                    sortable: true,
                },
                {
                    title: "Scope",
                    field: "scope",
                    sortable: true,
                },
                {
                    title: "ClientId",
                    field: "clientId",
                    sortable: true,
                },
                {
                    title: "ClientSecret",
                    field: "clientSecret",
                    sortable: true,
                },
                {
                    title: 'TimeAsync',
                    field: 'timeAsync',
                    sortable: true,
                    formatter: function (value, row, index) {
                        if (value) {
                            const d = new Date(value);
                            return d.toLocaleDateString('vi-VN', {
                                year: 'numeric',
                                month: '2-digit',
                                day: '2-digit',
                                hour: '2-digit',
                                minute: '2-digit',
                                second: '2-digit'
                            });
                        } else {
                            return ""; // Trả về chuỗi rỗng
                        }
                    },
                },
            ],
            data_1: [],
            item: {},
            options_1: {
                search: true,
                pagination: true,
                showExtendedPagination: true,
                showExport: false,
                sortable: true,
                groupBy: true,
                paginationHAlign: 'right',
                paginationDetailHAlign: 'right',
                pageSize: 10,
                pageList: [10, 25, 50, 100, 200],
            },
            object: {
                dateNow: formatDateTime(new Date()),
                form_tile: '',
                editAction: false,
                infoAction: false,
                bearerAuthorization: {
                    headers: { Authorization: `Bearer @Model`, 'Content-Type': 'application/json' }
                }
            },
            filter: {
                organizationId: null,
            },
            combobox: { schools: [], },
        },
        methods: {
            loadData() {
                $('.loader').show();
                axios.get('/api/v1/AttendanceConfig/GetsFilter', this.object.bearerAuthorization).then(response => {
                    if (response.request.responseURL.includes('~/Account/Login')) {
                        window.location = window.location.href;
                    }

                    if (response.data.succeeded) {
                        this.data = response.data.data;
                        // this.item = response.data.data || {
                        //     endpointIdentity: 'https://sso.vtsmas.vn/connect/token',
                        //     endpointGateway: 'https://gateway.vtsmas.vn',
                        // };

                    }
                    else {
                        alertify.notify(response.data.message, 'error', 6, function () { });
                    }

                    $('.loader').delay(100).hide(0);
                }).catch(error => {
                    $('.loader').delay(100).hide(0);
                });
            },
        },
        mounted() {
            this.loadData();
        },
    })
</script>

