// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Infrastructure.Datas.MasterData;

#nullable disable

namespace Server.Infrastructure.Datas.MasterData.MySqlMigrations
{
    [DbContext(typeof(MasterDataDbContext))]
    [Migration("20241025025523_AddFieldForTimeConfig")]
    partial class AddFieldForTimeConfig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Server.Core.Entities.A0.A0_AttendanceConfig", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccountName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EndpointGateway")
                        .HasColumnType("longtext");

                    b.Property<string>("EndpointIdentity")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A0_AttendanceConfig");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A0_EmailConfiguration", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool?>("EnableSSL")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("PassWord")
                        .HasColumnType("longtext");

                    b.Property<int?>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("Server")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A0_EmailConfiguration");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A0_Page", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Module")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("RolePermission")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Url")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("A0_Page");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A0_RoleGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descriptions")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A0_RoleGroup");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A0_RoleGroupDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("A0_RoleGroupId")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleGroupId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("A0_RoleGroupId");

                    b.ToTable("A0_RoleGroupDetail");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A0_RoleGroupPage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("PageId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleGroupId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("A0_RoleGroupPage");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A0_RoleGroupUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("A0_RoleGroupId")
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleGroupId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("A0_RoleGroupId");

                    b.ToTable("A0_RoleGroupUser");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A0_TimeConfig", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<TimeSpan?>("AfternoonBreakTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("AfternoonEndTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("AfternoonLateTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("AfternoonStartTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan?>("EveningBreakTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("EveningEndTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("EveningLateTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("EveningStartTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan?>("MorningBreakTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("MorningEndTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("MorningLateTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("MorningStartTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A0_TimeConfig");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A2_PersonFace", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FaceData")
                        .HasColumnType("longtext");

                    b.Property<int?>("FaceIndex")
                        .HasColumnType("int");

                    b.Property<string>("FaceType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A2_PersonFace");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A2_PersonSynToDevice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<bool?>("SynAction")
                        .HasMaxLength(50)
                        .HasColumnType("tinyint(50)");

                    b.Property<string>("SynCardMessage")
                        .HasColumnType("longtext");

                    b.Property<bool?>("SynCardStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SynFaceMessage")
                        .HasColumnType("longtext");

                    b.Property<bool?>("SynFaceStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SynFingerMessage")
                        .HasColumnType("longtext");

                    b.Property<bool?>("SynFingerStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SynMessage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A2_PersonSynToDevice");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_BusinessUnit", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A2_BusinessUnit");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_Device", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ActiveKey")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BrandName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ConnectUpdaeTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("ConnectionStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("DeviceDescription")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("longtext");

                    b.Property<bool?>("DeviceIn")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeviceInfo")
                        .HasColumnType("longtext");

                    b.Property<bool?>("DeviceInput")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeviceModel")
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("DeviceOut")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeviceParam")
                        .HasColumnType("longtext");

                    b.Property<bool?>("DeviceReader")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeviceType")
                        .HasColumnType("longtext");

                    b.Property<string>("GateId")
                        .HasColumnType("longtext");

                    b.Property<int?>("HTTPPort")
                        .HasColumnType("int");

                    b.Property<string>("IPAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("KeyConnect")
                        .HasColumnType("longtext");

                    b.Property<string>("KeyLicense")
                        .HasColumnType("longtext");

                    b.Property<string>("LaneId")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("MacAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Param")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int?>("PortConnect")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("A2_Device");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_Lane", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("GateId")
                        .HasColumnType("longtext");

                    b.Property<string>("LaneCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("LaneName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A2_Lane");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_Notification", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Readed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ReadedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A2_Notification");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_Organization", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationAddress")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("OrganizationDescription")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationEmail")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("OrganizationFavicon")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationFax")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationLogo")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationName")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationNote")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationPhone")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("OrganizationShortName")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationTax")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationTypeId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("A2_Organization");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_Person", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CitizenId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CurentAddress")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DriverLicenseNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PersonAccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PersonCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PersonGender")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PersonImage")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<long?>("PersonNo")
                        .HasColumnType("bigint");

                    b.Property<string>("PersonNote")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PersonTypeId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNUmber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonTypeId");

                    b.ToTable("A2_Person");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_PersonType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A2_PersonType");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_ScheduleSendMail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<bool?>("ReportSent")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ScheduleContentEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleDataCollect")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleExportType")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleName")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleNote")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleParam")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleReportType")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleSequentialSending")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan?>("ScheduleTimeEnd")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("ScheduleTimeSend")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("ScheduleTimeStart")
                        .HasColumnType("time(6)");

                    b.Property<string>("ScheduleTitleEmail")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A2_ScheduleSendMail");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_ScheduleSendMailDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleId")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleUserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A2_ScheduleSendMailDetail");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_SendEmail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AttachFile")
                        .HasColumnType("longtext");

                    b.Property<string>("BccEmails")
                        .HasColumnType("longtext");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CcEmails")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailSenderId")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<int?>("NumberOfResend")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TimeSent")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ToEmails")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A2_SendEmail");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_SendEmailLog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("MessageLog")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("SendEmailId")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("TimeSent")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("A2_SendEmailLog");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_Student", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ClassId")
                        .HasColumnType("longtext");

                    b.Property<string>("ClassName")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("longtext");

                    b.Property<string>("EthnicCode")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("FullNameOther")
                        .HasColumnType("longtext");

                    b.Property<string>("GenderCode")
                        .HasColumnType("longtext");

                    b.Property<string>("GradeCode")
                        .HasColumnType("longtext");

                    b.Property<string>("IdentifyNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageSrc")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsExemptedFull")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonId")
                        .HasColumnType("longtext");

                    b.Property<string>("PolicyTargetCode")
                        .HasColumnType("longtext");

                    b.Property<string>("PriorityEncourageCode")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("SortOrderByClass")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("StatusCode")
                        .HasColumnType("longtext");

                    b.Property<string>("StudentClassId")
                        .HasColumnType("longtext");

                    b.Property<string>("StudentCode")
                        .HasColumnType("longtext");

                    b.Property<string>("SyncCode")
                        .HasColumnType("longtext");

                    b.Property<string>("SyncCodeClass")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("A2_Student");
                });

            modelBuilder.Entity("Server.Core.Entities.A3.A3_Image", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImageBase64")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageFolder")
                        .HasColumnType("longtext");

                    b.Property<int?>("ImageIndex")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsPlateNumberImage")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<int?>("TimeWeight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("A3_Image");
                });

            modelBuilder.Entity("Server.Core.Entities.GIO.GIO_VehicleInOut", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateTimeIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateTimeOut")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Direction")
                        .HasColumnType("longtext");

                    b.Property<string>("GateInId")
                        .HasColumnType("longtext");

                    b.Property<string>("GateOutId")
                        .HasColumnType("longtext");

                    b.Property<string>("LaneInId")
                        .HasColumnType("longtext");

                    b.Property<string>("LaneOutId")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("PlateColor")
                        .HasColumnType("longtext");

                    b.Property<string>("PlateNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("PlateNumberIdentification")
                        .HasColumnType("longtext");

                    b.Property<string>("PlateNumberIdentificationOut")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<string>("Speed")
                        .HasColumnType("longtext");

                    b.Property<string>("UserInId")
                        .HasColumnType("longtext");

                    b.Property<string>("UserOutId")
                        .HasColumnType("longtext");

                    b.Property<string>("VehicleCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("VehicleColor")
                        .HasColumnType("longtext");

                    b.Property<string>("VehicleId")
                        .HasColumnType("longtext");

                    b.Property<int?>("VehicleInOutStatus")
                        .HasColumnType("int");

                    b.Property<string>("VehicleName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("VehicleNoInDay")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("GIO_VehicleInOut");
                });

            modelBuilder.Entity("Server.Core.Entities.TA.TA_TimeAttendenceEvent", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceIP")
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceId")
                        .HasColumnType("longtext");

                    b.Property<string>("EnrollNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("EventTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("EventType")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte?>("GetMode")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("InOutMode")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("ShiftCode")
                        .HasColumnType("longtext");

                    b.Property<string>("TAMessage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TA_TimeAttendenceEvent");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A0_RoleGroupDetail", b =>
                {
                    b.HasOne("Server.Core.Entities.A0.A0_RoleGroup", null)
                        .WithMany("RoleGroupDetails")
                        .HasForeignKey("A0_RoleGroupId");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A0_RoleGroupUser", b =>
                {
                    b.HasOne("Server.Core.Entities.A0.A0_RoleGroup", null)
                        .WithMany("RoleGroupUsers")
                        .HasForeignKey("A0_RoleGroupId");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.A2_Person", b =>
                {
                    b.HasOne("Server.Core.Entities.A2.A2_PersonType", "PersonType")
                        .WithMany()
                        .HasForeignKey("PersonTypeId");

                    b.Navigation("PersonType");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.A0_RoleGroup", b =>
                {
                    b.Navigation("RoleGroupDetails");

                    b.Navigation("RoleGroupUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
