// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Infrastructure.Datas.MasterData;

#nullable disable

namespace Server.Infrastructure.Datas.MasterData.MySqlMigrations
{
    [DbContext(typeof(MasterDataDbContext))]
    [Migration("20241115015443_MasterData_Init_addCoulun")]
    partial class MasterData_Init_addCoulun
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Server.Core.Entities.A0.AttendanceConfig", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccountName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ClientId")
                        .HasColumnType("longtext");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EndpointGateway")
                        .HasColumnType("longtext");

                    b.Property<string>("EndpointIdentity")
                        .HasColumnType("longtext");

                    b.Property<string>("GrantType")
                        .HasColumnType("longtext");

                    b.Property<string>("Key")
                        .HasColumnType("longtext");

                    b.Property<string>("KeyIV")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("Scope")
                        .HasColumnType("longtext");

                    b.Property<string>("SecretKey")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TimeAsync")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("access_token")
                        .HasColumnType("longtext");

                    b.Property<int?>("expires_in")
                        .HasColumnType("int");

                    b.Property<string>("refresh_token")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("time_expires_in")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("token_type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AttendanceConfig");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.AttendanceTimeConfig", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<TimeSpan?>("BreakTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan?>("LateTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AttendanceTimeConfig");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.EmailConfiguration", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool?>("EnableSSL")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PassWord")
                        .HasColumnType("longtext");

                    b.Property<int?>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("Server")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EmailConfiguration");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.Pages", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Module")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("RolePermission")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Url")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.PersonFace", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FaceData")
                        .HasColumnType("longtext");

                    b.Property<int?>("FaceIndex")
                        .HasColumnType("int");

                    b.Property<string>("FaceType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FaceUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PersonId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("IX_PersonFace_OrganizationId");

                    b.ToTable("PersonFace");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.PersonSynToDevice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PersonId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("SynAction")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SynCardMessage")
                        .HasColumnType("longtext");

                    b.Property<bool?>("SynCardStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SynFaceMessage")
                        .HasColumnType("longtext");

                    b.Property<bool?>("SynFaceStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SynFingerMessage")
                        .HasColumnType("longtext");

                    b.Property<bool?>("SynFingerStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SynMessage")
                        .HasColumnType("longtext");

                    b.Property<bool?>("SynStatus")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("LastModifiedDate")
                        .HasDatabaseName("IX_PersonSynToDevice_LastModifiedDate");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("IX_PersonSynToDevice_OrganizationId");

                    b.HasIndex("OrganizationId", "LastModifiedDate")
                        .HasDatabaseName("IX_Org_ModifiedDate");

                    b.HasIndex("PersonId", "DeviceId")
                        .HasDatabaseName("IX_PersonId_DeviceId");

                    b.ToTable("PersonSynToDevice");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.RoleGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descriptions")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RoleGroup");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.RoleGroupDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleGroupId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleGroupId");

                    b.ToTable("RoleGroupDetail");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.RoleGroupPage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PageId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleGroupId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RoleGroupPage");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.RoleGroupUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleGroupId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleGroupId");

                    b.ToTable("RoleGroupUser");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.TimeConfig", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<TimeSpan?>("AfternoonBreakTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("AfternoonEndTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("AfternoonLateTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("AfternoonStartTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan?>("EveningBreakTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("EveningEndTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("EveningLateTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("EveningStartTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan?>("MorningBreakTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("MorningEndTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("MorningLateTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("MorningStartTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TimeConfig");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.BusinessUnit", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BusinessUnit");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.ClassRoom", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("SchoolId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("ClassRoom");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.Device", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ActiveKey")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BrandName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CheckConnectTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ConnectUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("ConnectionStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("DeviceDescription")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("longtext");

                    b.Property<bool?>("DeviceIn")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeviceInfo")
                        .HasColumnType("longtext");

                    b.Property<bool?>("DeviceInput")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeviceModel")
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("DeviceOut")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeviceParam")
                        .HasColumnType("longtext");

                    b.Property<bool?>("DeviceReader")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DeviceType")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DisConnectUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GateId")
                        .HasColumnType("longtext");

                    b.Property<int?>("HTTPPort")
                        .HasColumnType("int");

                    b.Property<string>("IPAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("KeyConnect")
                        .HasColumnType("longtext");

                    b.Property<string>("KeyLicense")
                        .HasColumnType("longtext");

                    b.Property<string>("LaneId")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("MacAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Param")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int?>("PortConnect")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.Lane", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("GateId")
                        .HasColumnType("longtext");

                    b.Property<string>("LaneCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("LaneName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Lane");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.Notifications", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Readed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ReadedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.Organization", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationAddress")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("OrganizationDescription")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationEmail")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("OrganizationFavicon")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationFax")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrganizationLogo")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationName")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationNote")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationPhone")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("OrganizationShortName")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationTax")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationTypeId")
                        .HasColumnType("longtext");

                    b.Property<string>("ProvinceCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CitizenId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CurentAddress")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DriverLicenseNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PersonAccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PersonCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PersonGender")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PersonImage")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<long?>("PersonNo")
                        .HasColumnType("bigint");

                    b.Property<string>("PersonNote")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PersonTypeId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNUmber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonTypeId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.PersonType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PersonType");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.ScheduleJob", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleJobName")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ScheduleNote")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ScheduleSequential")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<TimeSpan?>("ScheduleTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("ScheduleType")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ScheduleJob");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.ScheduleJobLog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleJobId")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ScheduleJobParams")
                        .HasColumnType("longtext");

                    b.Property<bool?>("ScheduleJobStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ScheduleLogNote")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("ScheduleJobLog");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.ScheduleSendMail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<bool?>("ReportSent")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ScheduleContentEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleDataCollect")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleExportType")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleName")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleNote")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleParam")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleReportType")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleSequentialSending")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan?>("ScheduleTimeEnd")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("ScheduleTimeSend")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("ScheduleTimeStart")
                        .HasColumnType("time(6)");

                    b.Property<string>("ScheduleTitleEmail")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ScheduleSendMail");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.ScheduleSendMailDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleId")
                        .HasColumnType("longtext");

                    b.Property<string>("ScheduleUserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ScheduleSendMailDetail");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.SchoolYear", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Depcription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("SchoolYear");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.SendEmailLogs", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("MessageLog")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("SendEmailId")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("TimeSent")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("SendEmailLogs");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.SendEmails", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AttachFile")
                        .HasColumnType("longtext");

                    b.Property<string>("BccEmails")
                        .HasColumnType("longtext");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CcEmails")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailSenderId")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<int?>("NumberOfResend")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TimeSent")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ToEmails")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SendEmail");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.Student", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ClassId")
                        .HasColumnType("longtext");

                    b.Property<string>("ClassName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("longtext");

                    b.Property<string>("EthnicCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FullName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FullNameOther")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("GenderCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("GradeCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("IdentifyNumber")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ImageSrc")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsExemptedFull")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PersonId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PolicyTargetCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("PriorityEncourageCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("SchoolCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("SortOrderByClass")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("StatusCode")
                        .HasColumnType("longtext");

                    b.Property<string>("StudentClassId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StudentCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SyncCode")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("SyncCodeClass")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ClassName")
                        .HasDatabaseName("IX_Student_ClassName");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("IX_Student_OrganizationId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.StudentClassRoomYear", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ClassRoomId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("SchoolId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SchoolYearId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SchoolYearId");

                    b.ToTable("StudentClassRoomYear");
                });

            modelBuilder.Entity("Server.Core.Entities.A3.Images", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImageBase64")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageFolder")
                        .HasColumnType("longtext");

                    b.Property<int?>("ImageIndex")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsPlateNumberImage")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<int?>("TimeWeight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Server.Core.Entities.GIO.VehicleInOut", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateTimeIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateTimeOut")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Direction")
                        .HasColumnType("longtext");

                    b.Property<string>("GateInId")
                        .HasColumnType("longtext");

                    b.Property<string>("GateOutId")
                        .HasColumnType("longtext");

                    b.Property<string>("LaneInId")
                        .HasColumnType("longtext");

                    b.Property<string>("LaneOutId")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PlateColor")
                        .HasColumnType("longtext");

                    b.Property<string>("PlateNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("PlateNumberIdentification")
                        .HasColumnType("longtext");

                    b.Property<string>("PlateNumberIdentificationOut")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<string>("Speed")
                        .HasColumnType("longtext");

                    b.Property<string>("UserInId")
                        .HasColumnType("longtext");

                    b.Property<string>("UserOutId")
                        .HasColumnType("longtext");

                    b.Property<string>("VehicleCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("VehicleColor")
                        .HasColumnType("longtext");

                    b.Property<string>("VehicleId")
                        .HasColumnType("longtext");

                    b.Property<int?>("VehicleInOutStatus")
                        .HasColumnType("int");

                    b.Property<string>("VehicleName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("VehicleNoInDay")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("VehicleInOut");
                });

            modelBuilder.Entity("Server.Core.Entities.TA.TimeAttendenceDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("AbsenceTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsLate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOffPeriod")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOffSoon")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("OffSoonTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("PeriodI")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PeriodII")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PeriodIII")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PeriodIV")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PeriodV")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PeriodVI")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("TA_TimeAttendenceEventId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TimeAttendenceDetail");
                });

            modelBuilder.Entity("Server.Core.Entities.TA.TimeAttendenceEvent", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("AbsenceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("AttendenceSection")
                        .HasColumnType("int");

                    b.Property<string>("ClassCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceIP")
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceId")
                        .HasColumnType("longtext");

                    b.Property<string>("EnrollNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("EventTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("EventType")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("FormSendSMS")
                        .HasColumnType("int");

                    b.Property<byte?>("GetMode")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("InOutMode")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsLate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOffSoon")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("OffSoonTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PersonId")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<string>("SchoolCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SchoolYearCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ShiftCode")
                        .HasColumnType("longtext");

                    b.Property<string>("StudentCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TAMessage")
                        .HasColumnType("longtext");

                    b.Property<string>("ValueAbSent")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EventTime")
                        .HasDatabaseName("IX_TimeAttendenceEvent_EventTime");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("IX_TimeAttendenceEvent_OrganizationId");

                    b.HasIndex("OrganizationId", "EventTime", "EnrollNumber")
                        .HasDatabaseName("IX_Org_Eventtype_Enroll");

                    b.HasIndex("OrganizationId", "EventType", "EventTime")
                        .HasDatabaseName("IX_Org_Eventtype_Eventtime");

                    b.ToTable("TimeAttendenceEvent");
                });

            modelBuilder.Entity("Server.Core.Entities.TA.TimeAttendenceSync", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Actived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logs")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParamRequests")
                        .HasColumnType("longtext");

                    b.Property<string>("ParamResponses")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("longtext");

                    b.Property<bool?>("SyncStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TimeAttendenceEventId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate")
                        .HasDatabaseName("IX_TimeAttendenceSync_CreatedDate");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("IX_TimeAttendenceSync_OrganizationId");

                    b.ToTable("TimeAttendenceSync");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.RoleGroupDetail", b =>
                {
                    b.HasOne("Server.Core.Entities.A0.RoleGroup", null)
                        .WithMany("RoleGroupDetails")
                        .HasForeignKey("RoleGroupId");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.RoleGroupUser", b =>
                {
                    b.HasOne("Server.Core.Entities.A0.RoleGroup", null)
                        .WithMany("RoleGroupUsers")
                        .HasForeignKey("RoleGroupId");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.ClassRoom", b =>
                {
                    b.HasOne("Server.Core.Entities.A2.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.Person", b =>
                {
                    b.HasOne("Server.Core.Entities.A2.PersonType", "PersonType")
                        .WithMany()
                        .HasForeignKey("PersonTypeId");

                    b.Navigation("PersonType");
                });

            modelBuilder.Entity("Server.Core.Entities.A2.StudentClassRoomYear", b =>
                {
                    b.HasOne("Server.Core.Entities.A2.Organization", "ClassRoom")
                        .WithMany()
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Core.Entities.A2.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Server.Core.Entities.A2.SchoolYear", "SchoolYear")
                        .WithMany()
                        .HasForeignKey("SchoolYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");

                    b.Navigation("Organization");

                    b.Navigation("SchoolYear");
                });

            modelBuilder.Entity("Server.Core.Entities.A0.RoleGroup", b =>
                {
                    b.Navigation("RoleGroupDetails");

                    b.Navigation("RoleGroupUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
